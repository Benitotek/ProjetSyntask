{% extends 'base.html.twig' %}

{% block title %}Mes projects
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('styles/project-management.css') }}">
{% endblock %}

{% block body %}
{% set current_statut = current_statut|default('tous') %}
	<div class="app-container">
		<!-- Sidebar -->
		<aside class="sidebar">
			<div class="sidebar-header">
				<div class="app-logo">
					<div class="logo-placeholder">
						<i class="icon-image"></i>
					</div>
					<span class="logo-text">logo de l'application</span>
				</div>

				<div class="user-profile">
					<div class="profile-avatar">
						<i class="icon-user"></i>
					</div>
					<div class="user-info">
						<div class="user-name">{{ app.user.fullName|default('Employ√©') }}</div>
						<div class="user-role">{{ app.user.role|join(', ')|replace({'ROLE_': ''})|default('r√¥le de l\'utilisateur') }}</div>
					</div>
					<div class="username-display">{{ app.user.email|default('nom d\'utilisateur') }}</div>
				</div>
			</div>

			<nav class="sidebar-nav">
				<ul class="nav-menu">
					<li class="nav-item">
						<a href="{{ path('app_dashboard') }}" class="nav-link">
							<i class="icon-dashboard"></i>
							Tableau de bord
						</a>
					</li>
					<li class="nav-item active">
						<a href="{{ path('app_mes_projects') }}" class="nav-link">
							<i class="icon-projects"></i>
							Mes projects
						</a>
					</li>
					<li class="nav-item">
						<a href="{{ path('app_dashboard') }}" class="nav-link">
							<i class="icon-stats"></i>
							Statistiques
						</a>
					</li>
					<li class="nav-item">
						<a href="{{ path('app_my_profile') }}" class="nav-link">
							<i class="icon-profile"></i>
							Mon profil
						</a>
					</li>
				</ul>
			</nav>

			<div class="sidebar-footer">
				<a href="{{ path('app_logout') }}" class="logout-btn">
					<i class="icon-logout"></i>
					bouton de d√©connexion
				</a>
			</div>
		</aside>

		<!-- Contenu principal -->
		<main class="main-content">
			<div class="content-header">
				<h1 class="page-title">Mes projects</h1>
				<div class="header-actions">
					{% if is_granted('ROLE_DIRECTEUR') %}
						<a href="{{ path('app_project_new') }}" class="btn btn-primary">
							<i class="icon-plus"></i>
							Nouveau project
						</a>
					{% endif %}
				</div>
			</div>

			<!-- Barre de recherche -->
			<div class="search-container">
				<input type="text" id="searchInput" class="search-input" placeholder="Rechercher un projet...">
				<button id="clearSearch" class="btn btn-secondary" style="display: none;">
					<i class="icon-close"></i>
					Effacer
				</button>
			</div>

			<!-- Filtres -->
			<div class="filters-section">
				<div class="filter-tabs">
					<a href="#" class="filter-tab active" data-statut="tous">
						Tous
					</a>
					<a href="#" class="filter-tab" data-statut="EN_ATTENTE">
						En attente
					</a>
					<a href="#" class="filter-tab" data-statut="EN_COURS">
						En cours
					</a>
					<a href="#" class="filter-tab" data-statut="TERMINER">
						Termin√©s
					</a>
				</div>
			</div>

			<!-- Liste des projects -->
			<div id="projectsContainer" class="projects-grid">
				<!-- Le contenu sera charg√© ici via JavaScript -->
			</div>

			<!-- Pagination -->
			<div id="pagination" class="pagination"></div>
		</main>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			// Variables globales
			let currentPage = 1;
			let currentStatut = 'tous';
			let currentSearch = '';
			const limit = 12; // Nombre de projets par page
			
			// √âl√©ments DOM
			const projectsContainer = document.getElementById('projectsContainer');
			const paginationContainer = document.getElementById('pagination');
			const searchInput = document.getElementById('searchInput');
			const clearSearchBtn = document.getElementById('clearSearch');
			const filterTabs = document.querySelectorAll('.filter-tab');
			
			// Fonction pour charger les projets
			function loadProjects(page = 1, search = '', statut = 'tous') {
				// Afficher le loader
				projectsContainer.innerHTML = '<div class="loading">Chargement des projets...</div>';
				
				// Construire les param√®tres de requ√™te
				const params = new URLSearchParams({
					page: page,
					limit: limit
				});
				
				if (search) {
					params.append('search', search);
				}
				
				if (statut && statut !== 'tous') {
					params.append('statut', statut);
				}
				
				// Faire la requ√™te AJAX
				fetch(`{{ path('api_projects_list') }}?${params}`, {
					method: 'GET',
					headers: {
						'Accept': 'application/json',
						'X-Requested-With': 'XMLHttpRequest'
					}
				})
				.then(response => {
					if (!response.ok) {
						throw new Error('Erreur r√©seau');
					}
					return response.json();
				})
				.then(data => {
					if (data.success) {
						displayProjects(data.data);
						displayPagination(data.pagination);
					} else {
						projectsContainer.innerHTML = '<div class="no-results">Erreur lors du chargement des projets</div>';
					}
				})
				.catch(error => {
					console.error('Erreur:', error);
					projectsContainer.innerHTML = '<div class="no-results">Erreur lors du chargement des projets</div>';
				});
			}
			
			// Fonction pour afficher les projets
			function displayProjects(projects) {
				if (projects.length === 0) {
					projectsContainer.innerHTML = `
						<div class="empty-state">
							<div class="empty-icon">üìÅ</div>
							<h3>Aucun project trouv√©</h3>
							<p>Aucun projet ne correspond aux crit√®res de recherche.</p>
						</div>
					`;
					return;
				}
				
				const projectsHTML = projects.map(project => {
					const statusClass = project.statut ? project.statut.toLowerCase().replace('-', '_') : 'unknown';
					const statusText = project.statut ? project.statut.replace('-', ' ') : 'Non d√©fini';
					
					return `
						<div class="project-card">
							<div class="project-header">
								<h3 class="project-title">${project.titre || 'Titre non d√©fini'}</h3>
								<span class="project-statut project-statut-${statusClass}">
									${statusText}
								</span>
							</div>
							
							<div class="project-meta">
								${project.description ? `
									<p class="project-description">
										${project.description.length > 100 ? project.description.substring(0, 100) + '...' : project.description}
									</p>
								` : ''}
								
								<div class="project-dates">
									<div class="project-date">
										<i class="icon-calendar"></i>
										<span>Cr√©√© le ${formatDate(project.date_creation)}</span>
									</div>
									${project.date_butoir ? `
										<div class="project-date">
											<i class="icon-clock"></i>
											<span>√âch√©ance: ${formatDate(project.date_butoir)}</span>
										</div>
									` : ''}
								</div>
								
								${project.progress !== undefined ? `
									<div class="project-progress">
										<div class="progress-bar">
											<div class="progress-fill" style="width: ${project.progress}%"></div>
										</div>
										<span class="progress-text">${project.completed_tasks || 0}/${project.total_tasks || 0} t√¢ches</span>
									</div>
								` : ''}
							</div>
							
							<div class="project-actions">
								<a href="/project/${project.id}/kanban" class="btn btn-primary btn-sm">
									<i class="icon-kanban"></i>
									Kanban
								</a>
								<a href="/project/${project.id}" class="btn btn-secondary btn-sm">
									<i class="icon-eye"></i>
									D√©tails
								</a>
							</div>
						</div>
					`;
				}).join('');
				
				projectsContainer.innerHTML = projectsHTML;
			}
			
			// Fonction pour afficher la pagination
			function displayPagination(pagination) {
				if (pagination.pages <= 1) {
					paginationContainer.innerHTML = '';
					return;
				}
				
				let paginationHTML = '';
				
				// Bouton pr√©c√©dent
				if (pagination.page > 1) {
					paginationHTML += `
						<button class="page-btn" data-page="${pagination.page - 1}">
							¬´ Pr√©c√©dent
						</button>
					`;
				}
				
				// Num√©ros de page
				for (let i = 1; i <= pagination.pages; i++) {
					if (i === pagination.page) {
						paginationHTML += `<button class="page-btn active" data-page="${i}">${i}</button>`;
					} else if (i === 1 || i === pagination.pages || Math.abs(i - pagination.page) <= 2) {
						paginationHTML += `<button class="page-btn" data-page="${i}">${i}</button>`;
					} else if (i === pagination.page - 3 || i === pagination.page + 3) {
						paginationHTML += `<span class="page-ellipsis">...</span>`;
					}
				}
				
				// Bouton suivant
				if (pagination.page < pagination.pages) {
					paginationHTML += `
						<button class="page-btn" data-page="${pagination.page + 1}">
							Suivant ¬ª
						</button>
					`;
				}
				
				paginationContainer.innerHTML = paginationHTML;
				
				// Ajouter les √©v√©nements de clic
				document.querySelectorAll('.page-btn').forEach(btn => {
					btn.addEventListener('click', function() {
						const page = parseInt(this.getAttribute('data-page'));
						currentPage = page;
						loadProjects(page, currentSearch, currentStatut);
					});
				});
			}
			
			// Fonction pour formater les dates
			function formatDate(dateString) {
				if (!dateString) return '';
				const date = new Date(dateString);
				return date.toLocaleDateString('fr-FR');
			}
			
			// Gestion de la recherche
			let searchTimeout;
			searchInput.addEventListener('input', function() {
				clearTimeout(searchTimeout);
				const searchValue = this.value.trim();
				
				// Debounce pour √©viter trop de requ√™tes
				searchTimeout = setTimeout(() => {
					currentSearch = searchValue;
					currentPage = 1;
					loadProjects(1, searchValue, currentStatut);
					
					// Afficher/cacher le bouton d'effacement
					clearSearchBtn.style.display = searchValue ? 'block' : 'none';
				}, 300);
			});
			
			// Bouton effacer recherche
			clearSearchBtn.addEventListener('click', function() {
				searchInput.value = '';
				currentSearch = '';
				currentPage = 1;
				this.style.display = 'none';
				loadProjects(1, '', currentStatut);
			});
			
			// Gestion des filtres par statut
			filterTabs.forEach(tab => {
				tab.addEventListener('click', function(e) {
					e.preventDefault();
					
					// Mettre √† jour l'√©tat actif
					filterTabs.forEach(t => t.classList.remove('active'));
					this.classList.add('active');
					
					// Mettre √† jour le statut courant
					currentStatut = this.getAttribute('data-statut');
					currentPage = 1;
					
					// Recharger les projets
					loadProjects(1, currentSearch, currentStatut);
				});
			});
			
			// Chargement initial
			loadProjects();
		});
	</script>

	{# {% set current_statut = current_statut|default('tous') %}
	<div
		class="app-container">
		<!-- Sidebar -->
		<aside class="sidebar">
			<div class="sidebar-header">
				<div class="app-logo">
					<div class="logo-placeholder">
						<i class="icon-image"></i>
					</div>
					<span class="logo-text">logo de l'application</span>
				</div>

				<div class="user-profile">
					<div class="profile-avatar">
						<i class="icon-user"></i>
					</div>
					<div class="user-info">
						<div class="user-name">{{ app.user.fullName|default('Employ√©') }}</div>
						<div class="user-role">{{ app.user.role|join(', ')|replace({'ROLE_': ''})|default('r√¥le de l\'utilisateur') }}</div>
                </div>
                <div class="username-display">{{ app.user.email|default('nom d\'utilisateur') }}</div>
					</div>
				</div>

				<nav class="sidebar-nav">
					<ul class="nav-menu">
						<li class="nav-item">
							<a href="{{ path('app_dashboard') }}" class="nav-link">
								<i class="icon-dashboard"></i>
								Tableau de bord
							</a>
						</li>
						<li class="nav-item active">
							<a href="{{ path('app_mes_projects') }}" class="nav-link">
								<i class="icon-projects"></i>
								Mes projects
							</a>
						</li>
						<li class="nav-item">
							<a href="{{ path('app_dashboard') }}" class="nav-link">
								<i class="icon-stats"></i>
								Statistiques
							</a>
						</li>
						<li class="nav-item">
							<a href="{{ path('app_my_profile') }}" class="nav-link">
								<i class="icon-profile"></i>
								Mon profil
							</a>
						</li>
					</ul>
				</nav>

				<div class="sidebar-footer">
					<a href="{{ path('app_logout') }}" class="logout-btn">
						<i class="icon-logout"></i>
						bouton de d√©connexion
					</a>
				</div>
			</aside>

			<!-- Contenu principal -->
			<main class="main-content">
				<div class="content-header">
					<h1 class="page-title">Mes projects</h1>
					<div class="header-actions">
						{% if is_granted('ROLE_DIRECTEUR') %}
							<a href="{{ path('app_project_new') }}" class="btn btn-primary">
								<i class="icon-plus"></i>
								Nouveau project
							</a>
						{% endif %}
					</div>
				</div>

				{# <!-- Filtres --> Partie Ok mais sans les 2 bouton Tableau de bord et statistiques Voir Modif dashbordController ProjectRepository etc..
								<div class="filters-section">
									<div class="filter-tabs">
										<a href="{{ path('app_mes_projects') }}" class="filter-tab {% if current_statut is not defined %}active{% endif %}">
											Tous
										</a>
										{% if current_statut is defined %}
											{# Utiliser current_statut ici #}
				{# <span class="badge {% if current_statut == 'en_cours' %}bg-primary{% else %}bg-secondary{% endif %}">
												{{ current_statut }}
											</span>
										{% else %} #}
				{# Valeur par d√©faut si current_statut n'existe pas #}
				{# <span class="badge bg-secondary">tous</span>
				
											<a href="{{ path('app_mes_projects', {'statut': 'EN_ATTENTE'}) }}" class="filter-tab {% if current_statut == 'EN_ATTENTE' %}active{% endif %}">
												En attente
											</a>
											<a href="{{ path('app_mes_projects', {'statut': 'EN_COURS'}) }}" class="filter-tab {% if current_statut == 'EN_COURS' %}active{% endif %}">
												En cours
											</a>
											<a href="{{ path('app_mes_projects', {'statut': 'TERMINER'}) }}" class="filter-tab {% if current_statut == 'TERMINER' %}active{% endif %}">
												Termin√©s
				
											</a>
										{% endif %}
									</div>
								</div> #}
				{# Remplacez la section des filtres par celle-ci #}
				<!-- Filtres -->
					<div class="filters-section"> <div class="filter-tabs">
						<a href="{{ path('app_mes_projects') }}" class="filter-tab {% if current_statut == 'tous' %}active{% endif %}">
							Tous
						</a>
						<a href="{{ path('app_mes_projects', {'statut': 'EN_ATTENTE'}) }}" class="filter-tab {% if current_statut == 'EN_ATTENTE' %}active{% endif %}">
							En attente
						</a>
						<a href="{{ path('app_mes_projects', {'statut': 'EN_COURS'}) }}" class="filter-tab {% if current_statut == 'EN_COURS' %}active{% endif %}">
							En cours
						</a>
						<a href="{{ path('app_mes_projects', {'statut': 'TERMINER'}) }}" class="filter-tab {% if current_statut == 'TERMINER' %}active{% endif %}">
							Termin√©s
						</a>
					</div>
				</div>
				<!-- Liste des projects -->
				<div class="projects-grid">
					{% for project in projects %}
						<div class="project-card">
							<div class="project-header">
								<h3 class="project-title">{{ project.titre }}</h3>
								<span class="project-statut project-statut-{{ project.statut|lower|replace({'-': '_'}) }}">
									{{ project.statut|replace({'-': ' '})|title }}
								</span>
							</div>

							<div class="project-meta">
								{% if project.description %}
									<p class="project-description">{{ project.description|slice(0, 100) }}
										{% if project.description|length > 100 %}...
										{% endif %}
									</p>
								{% endif %}

								<div class="project-dates">
									<div class="project-date">
										<i class="icon-calendar"></i>
										<span>Cr√©√© le
											{{ project.dateCreation|date('d/m/Y') }}</span>
									</div>
									{% if project.dateButoir %}
										<div class="project-date">
											<i class="icon-clock"></i>
											<span>√âch√©ance:
												{{ project.dateButoir|date('d/m/Y') }}</span>
										</div>
									{% endif %}
								</div>

								<div class="project-team">
									<div
										class="team-avatars">
										{# Si le chef de project s'appelle CHEF_PROJECT dans l'entit√© #}
										{% if project.chefproject %}
											<div class="team-avatar chef" title="Chef de project: {{ project.chefproject.fullName }}">
												{{ project.chefproject.prenom|slice(0, 1)|upper }}{{ project.chefProject.titre|slice(0, 1)|upper }}
											</div>
										{% endif %}
										{% if project.chefproject is not empty %}
											<div class="team-avatar chef" title="Chef de project: {{ project.chefproject.prenom }} {{ project.chefProject.titre }}">
												{{ project.chefproject.prenom|slice(0, 1)|upper }}{{ project.chefProject.titre|slice(0, 1)|upper }}
											</div>
										{% endif %}
										{# Afficher les membres du project #}
										{% if project.membres is defined and project.membres|length > 0 %}
											{% for membre in project.membres|slice(0, 3) %}
												<div class="team-avatar" title="{{ membre.prenom }} {{ membre.nom }}">
													{{ membre.prenom|slice(0, 1)|upper }}{{ membre.nom|slice(0, 1)|upper }}
												</div>
											{% endfor %}
											{% if project.membres|length > 3 %}
												<div class="team-avatar more">
													+{{ project.membres|length - 3 }}
												</div>
											{% endif %}
										{% endif %}
										{# {% if project.chefDeproject %}
											<div class="team-avatar chef" title="Chef de project: {{ project.chefDeproject.username }}">
												{{ project.chefDeproject.username|slice(0, 2)|upper }}
											</div>
										{% endif %}
										{% for membre in project.membres|slice(0, 3) %}
											<div class="team-avatar" title="{{ membre.username }}">
												{{ membre.username|slice(0, 2)|upper }}
											</div>
										{% endfor %}
										{% if project.membres|length > 3 %}
											<div class="team-avatar more">
												+{{ project.membres|length - 3 }}
											</div>
										{% endif %}
									</div> #}
								</div>

								{% if project.tasks is defined and project.tasks|length > 0 %}
									<div class="project-progress">
										{% set totalTasks = project.tasks|length %}
										{% set completedTasks = project.tasks|filter(t => t.statut == 'TERMINER')|length %}
										{% set progressPercent = totalTasks > 0 ? (completedTasks / totalTasks * 100)|round : 0 %}

										<div class="progress-bar">
											<div class="progress-fill" style="width: {{ progressPercent }}%"></div>
										</div>
										<span class="progress-text">{{ completedTasks }}/{{ totalTasks }}
											t√¢ches</span>
									</div>
								{% endif %}
							</div>

							<div class="project-actions">
								<a href="{{ path('app_project_kanban', {'id': project.id}) }}" class="btn btn-primary btn-sm">
									<i class="icon-kanban"></i>
									Kanban
								</a>
								<a href="{{ path('app_project_show', {'id': project.id}) }}" class="btn btn-secondary btn-sm">
									<i class="icon-eye"></i>
									D√©tails
								</a>
							</div>
						</div>
					{% else %}
						<div class="empty-state">
							<div class="empty-icon">üìÅ</div>
							<h3>Aucun project trouv√©</h3>
							<p>Vous n'avez pas encore de projects assign√©s.</p>
							{% if is_granted('ROLE_DIRECTEUR') %}
								<a href="{{ path('app_project_new') }}" class="btn btn-primary">
									Cr√©er un nouveau project
								</a>
							{% endif %}
						</div>
					{% endfor %}
				</div>
			</main>
		</div> #}
	{% endblock %}
