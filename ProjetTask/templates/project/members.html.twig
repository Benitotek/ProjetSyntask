{% extends 'base.html.twig' %}

{% block title %}Membres du projet -
	{{ project.titre }}
	| SYNTASK
{% endblock %}

{% block stylesheets %}
	{{ parent() }}

	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet"/>
	<link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet"/>
	<link rel="stylesheet" href="{{ asset('styles/dashboard.css') }}">
	<link rel="stylesheet" href="{{ asset('styles/members.css') }}">
{% endblock %}
{% block javascripts %}
	{{ parent() }}

 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
	 <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
	 <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
	 <script src="{{ asset('js/members.js') }}"></script>
{% endblock %}

{% block body %}

	<div class="container-fluid py-4">
		<div class="d-flex justify-content-between align-items-center mb-4">
			<div>
				<h1 class="mb-0">Membres du projet</h1>
				<p class="text-muted">
					<a href="{{ path('app_project_show', {'id': project.id}) }}">{{ project.titre }}</a>
				</p>
			</div>
			<div class="d-flex gap-2">
				<a href="{{ path('app_project_show', {'id': project.id}) }}" class="btn btn-outline-primary">
					<i class="fas fa-arrow-left"></i>
					Retour au projet
				</a>
				{% if is_granted('EDIT', project) %}
					<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMemberModal">
						<i class="fas fa-user-plus"></i>
						Ajouter un membre
					</button>
				{% endif %}

			</div>
		</div>
		<div
			class="row">
			<!-- Chefs de projet -->
			<div class="col-md-6 mb-4">
				<div class="card h-100">
					<div class="card-header">
						<h5 class="card-title mb-0">
							<i class="fas fa-user-tie me-2"></i>
							Chefs de projet ({{ chefsProjets|length }})
						</h5>
					</div>
					<div class="card-body">
						{% if chefsProjets|length > 0 %}
							<div class="table-responsive">
								<table class="table table-hover">
									<thead>
										<tr>
											<th>Nom</th>
											<th>Email</th>
											<th>Tâches assignées</th>
											<th>Actions</th>
										</tr>
									</thead>
									<tbody>
										{% for chefProjet in chefsProjets %}
											<tr>
												<td>
													<div class="d-flex align-items-center">
														<div class="user-avatar me-2">
															{{ chefProjet.prenom|first }}{{ chefProjet.nom|first }}
														</div>
														<div>
															{{ chefProjet.prenom }}
															{{ chefProjet.nom }}
															{% if project.createdBy and project.createdBy.id == chefProjet.id %}
																<span class="badge bg-info ms-1">Créateur</span>
															{% endif %}
														</div>
													</div>
												</td>
												<td>{{ chefProjet.email }}</td>
												<td>
													{% set taskCount = 0 %}
													{% for task in project.tasks %}
														{% if task.assignedUser and task.assignedUser.id == chefProjet.id %}
															{% set taskCount = taskCount + 1 %}
														{% endif %}
													{% endfor %}
													{{ taskCount }}
												</td>
												<td>
													<div class="btn-group">
														<button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
															Actions
														</button>
														<ul class="dropdown-menu">
															<li>
																<a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#memberTasksModal" data-user-id="{{ chefProjet.id }}" data-user-name="{{ chefProjet.prenom }} {{ chefProjet.nom }}">
																	<i class="fas fa-tasks me-2"></i>
																	Voir les tâches
																</a>
															</li>
															{% if is_granted('ROLE_DIRECTEUR') %}

																<li>
																	<a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#changeRoleModal" data-user-id="{{ chefProjet.id }}" data-user-name="{{ chefProjet.prenom }} {{ chefProjet.nom }}" data-current-role="ROLE_CHEF_PROJET">
																		<i class="fas fa-user-tag me-2"></i>
																		Changer le rôle
																	</a>
																</li>
															{% endif %}
															{% if is_granted('EDIT', project) and project.createdBy and project.createdBy.id != chefProjet.id %}

																<li><hr class="dropdown-divider"></li>
																<li>
																	<form action="{{ path('app_project_members_remove', {'projectId': project.id, 'userId': chefProjet.id}) }}" method="post" onsubmit="return confirm('Êtes-vous sûr de vouloir retirer ce membre du projet ?');">
																		<input type="hidden" name="_token" value="{{ csrf_token('remove_member' ~ chefProjet.id) }}">
																		<button type="submit" class="dropdown-item text-danger">
																			<i class="fas fa-user-minus me-2"></i>
																			Retirer du projet
																		</button>
																	</form>
																</li>
															{% endif %}
														</ul>
													</div>
												</td>
											</tr>
										{% endfor %}
									</tbody>
								</table>
							</div>
						{% else %}
							<div class="text-center py-4">
								<i class="fas fa-user-tie fa-3x text-muted mb-3"></i>
								<p class="text-muted">Aucun chef de projet associé</p>
							</div>
						{% endif %}
					</div>
				</div>
			</div>
			<!-- Employés -->
			<div class="col-md-6 mb-4">
				<div class="card h-100">
					<div class="card-header">
						<h5 "title mb-0">
							<i class="fas fa-users me-2"></i>
							Employés ({{ employes|length }})

						</h5>
					</div>
					<div class="card-body">
						{% if employes|length > 0 %}
							<div class="table-responsive">
								<table class="table table-hover">
									<thead>
										<tr>
											<th>Nom</th>
											<th>Email</th>
											<th>Tâches assignées</th>
											<th>Actions</th>
										</tr>
									</thead>
									<tbody>
										{% for employe in employes %}
											<tr>
												<td>
													<div class="d-flex align-items-center">
														<div class="user-avatar me-2">
															{{ employe.prenom|first }}{{ employe.nom|first }}
														</div>
														<div>
															{{ employe.prenom }}
															{{ employe.nom }}
														</div>
													</div>
												</td>
												<td>{{ employe.email }}</td>
												<td>
													{% set taskCount = 0 %}
													{% for task in project.tasks %}
														{% if task.assignedUser and task.assignedUser.id == employe.id %}
															{% set taskCount = taskCount + 1 %}
														{% endif %}
													{% endfor %}
													{{ taskCount }}
												</td>
												<td>
													<div class="btn-group">
														<button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
															Actions
														</button>
														<ul class="dropdown-menu">
															<li>
																<a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#memberTasksModal" data-user-id="{{ employe.id }}" data-user-name="{{ employe.prenom }} {{ employe.nom }}">
																	<i class="fas fa-tasks me-2"></i>
																	Voir les tâches
																</a>
															</li>
															{% if is_granted('ROLE_DIRECTEUR') or is_granted('ROLE_CHEF_PROJET') %}

																<li>
																	<a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#changeRoleModal" data-user-id="{{ employe.id }}" data-user-name="{{ employe.prenom }} {{ employe.nom }}" data-current-role="ROLE_EMPLOYE">
																		<i class="fas fa-user-tag me-2"></i>
																		Changer le rôle
																	</a>
																</li>
															{% endif %}
															{% if is_granted('EDIT', project) %}

																<li><hr class="dropdown-divider"></li>
																<li>
																	<form action="{{ path('app_project_members_remove', {'projectId': project.id, 'userId': employe.id}) }}" method="post" onsubmit="return confirm('Êtes-vous sûr de vouloir retirer ce membre du projet ?');">
																		<input type="hidden" name="_token" value="{{ csrf_token('remove_member' ~ employe.id) }}">
																		<button type="submit" class="dropdown-item text-danger">
																			<i class="fas fa-user-minus me-2"></i>
																			Retirer du projet
																		</button>
																	</form>
																</li>
															{% endif %}
														</ul>
													</div>
												</td>
											</tr>
										{% endfor %}
									</tbody>
								</table>
							</div>
						{% else %}
							<div class="text-center py-4">
								<i class="fas fa-users fa-3x text-muted mb-3"></i>
								<p class="text-muted">Aucun employé associé</p>
							</div>
						{% endif %}
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- Modal pour ajouter un membre -->
	<div class="modal fade" id="addMemberModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Ajouter un membre au projet</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
				</div>
				<div class="modal-body">
					<form id="add-member-form" action="{{ path('app_project_members_add', {'id': project.id}) }}" method="post">
						<input type="hidden" name="_token" value="{{ csrf_token('add_member' ~ project.id) }}">
						<div class="mb-3">
							<label for="user-select" class="form-label">Rechercher un utilisateur</label>
							<select id="user-select" name="user_id" class="form-select" required>
								<option value="">Rechercher...</option>
							</select>
							<div class="form-text">Saisissez au moins 2 caractères pour rechercher</div>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ANNULER</button>
					<button type="submit" form="add-member-form" class="btn btn-primary">Ajouter</button>
				</div>
			</div>
		</div>
	</div>
	<!-- Modal pour changer le rôle -->
	<div class="modal fade" id="changeRoleModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Changer le rôle</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
				</div>
				<div class="modal-body">
					<form id="change-role-form" action="" method="post">
						<input type="hidden" name="_token" value="">
						<div class="mb-3">
							<p id="change-role-user-info">Changer le rôle de
								<strong></strong>
							</p>
						</div>
						<div class="mb-3">
							<label for="role-select" class="form-label">Nouveau rôle</label>
							<select id="role-select" name="role" class="form-select" required>
								<option value="ROLE_EMPLOYE">Employé</option>
								<option value="ROLE_CHEF_PROJET">Chef de projet</option>
							</select>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ANNULER</button>
					<button type="submit" form="change-role-form" class="btn btn-primary">Modifier</button>
				</div>
			</div>
		</div>
	</div>
	<!-- Modal pour voir les tâches d'un membre -->
	<div class="modal fade" id="memberTasksModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Tâches assignées à
						<span id="member-tasks-name"></span>
					</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
				</div>
				<div class="modal-body">
					<div class="table-responsive">
						<table class="table table-hover" id="member-tasks-table">
							<thead>
								<tr>
									<th>Titre</th>
									<th>Liste</th>
									<th>Priorité</th>
									<th>Date limite</th>
									<th>Actions</th>
								</tr>
							</thead>
							<tbody>
								<!-- Sera rempli dynamiquement par JavaScript -->
							</tbody>
						</table>
					</div>
					<div id="no-tasks-message" class="text-center py-4 d-none">
						<i class="fas fa-tasks fa-3x text-muted mb-3"></i>
						<p class="text-muted">Aucune tâche assignée à cet utilisateur</p>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
				</div>
			</div>
		</div>
	</div>
	 <script> document.addEventListener('DOMContentLoaded', function() { // Initialisation de Select2 pour la recherche d'utilisateurs $('#user-select').select2({ theme: 'bootstrap-5', placeholder: 'Rechercher un utilisateur...', minimumInputLength: 2, ajax: { url: '{{ path('app_project_members_search', {'id': project.id}) }}', dataType: 'json', delay: 250, data: function(params) { return { term: params.term }; }, processResults: function(data) { return { results: data.success ? data.results : [] }; }, cache: true } }); // Gestion du modal de changement de rôle const changeRoleModal = document.getElementById('changeRoleModal'); changeRoleModal.addEventListener('show.bs.modal', function(event) { const button = event.relatedTarget; const userId = button.getAttribute('data-user-id'); const userName = button.getAttribute('data-user-name'); const currentRole = button.getAttribute('data-current-role'); const form = this.querySelector('#change-role-form'); const userInfo = this.querySelector('#change-role-user-info strong'); const roleSelect = this.querySelector('#role-select'); const tokenInput = this.querySelector('input[name="_token"]'); form.action = '{{ path('app_project_change_member_role', {'id': project.id, 'userId': 'USER_ID'}) }}'.replace('USER_ID', userId); userInfo.textContent = userName; roleSelect.value = currentRole; tokenInput.value = '{{ csrf_token('change_role') }}' + userId; }); // Gestion du modal des tâches d'un membre const memberTasksModal = document.getElementById('memberTasksModal'); memberTasksModal.addEventListener('show.bs.modal', function(event) { const button = event.relatedTarget; const userId = button.getAttribute('data-user-id'); const userName = button.getAttribute('data-user-name'); const titleSpan = this.querySelector('#member-tasks-name'); const tableBody = this.querySelector('#member-tasks-table tbody'); const noTasksMessage = this.querySelector('#no-tasks-message'); titleSpan.textContent = userName; tableBody.innerHTML = ''; // Récupérer les tâches de l'utilisateur dans ce projet fetch('{{ path('api_user_project_tasks', {'projectId': project.id, 'userId': 'USER_ID'}) }}'.replace('USER_ID', userId)) .then(response => response.json()) .then(data => { if (data.success && data.tasks.length > 0) { data.tasks.forEach(task => { const row = document.createElement('tr'); // Ajouter la classe selon la priorité if (task.priority === 'URGENT') { row.classList.add('table-danger'); } else if (task.priority === 'HAUTE') { row.classList.add('table-warning'); } row.innerHTML = ` <td>${task.title}</td> <td><span class="badge" style="background-color: ${task.listColor}">${task.listName}</span></td> <td><span class="priority-badge priority-${task.priority.toLowerCase()}">${task.priorityLabel}</span></td> <td>${task.dueDate ? task.dueDate : '<span class="text-muted">Non définie</span>'}</td> <td> <a href="${task.url}" class="btn btn-sm btn-outline-primary" target="_blank"> <i class="fas fa-eye"></i> </a> </td> `; tableBody.appendChild(row); }); noTasksMessage.classList.add('d-none'); document.getElementById('member-tasks-table').classList.remove('d-none'); } else { noTasksMessage.classList.remove('d-none'); document.getElementById('member-tasks-table').classList.add('d-none'); } }) .catch(error => { console.error('Erreur lors de la récupération des tâches:', error); noTasksMessage.classList.remove('d-none'); document.getElementById('member-tasks-table').classList.add('d-none'); }); }); }); </script>
{% endblock %}
