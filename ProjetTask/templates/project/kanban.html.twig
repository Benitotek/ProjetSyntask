{% extends 'base.html.twig' %}

{% block title %}Kanban - {{ project.titre }} - SYNTASK{% endblock %}

{% block body %}
<div class="dashboard-container">
    <div class="row">
        <div class="col-12 dashboard-header">
            <h1>
                <i class="fas fa-columns"></i>
                Kanban: {{ project.titre }}
            </h1>
            <p class="text-muted">
                {% if project.reference is defined and project.reference is not null %}
                    Référence: {{ project.reference }}
                {% endif %}
            </p>
        </div>
    </div>
    
    <div class="row mb-3">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ path('app_dashboard') }}">Tableau de bord</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('app_project_index') }}">Projets</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('app_project_show', {'id': project.id}) }}">{{ project.titre }}</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Kanban</li>
                </ol>
            </nav>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-4">
            <div class="card content-card h-100">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">À faire</h5>
                </div>
                <div class="card-body">
                    {% set todoTasks = project.tasks|filter(task => task.statut == 'A-FAIRE') %}
                    {% if todoTasks is empty %}
                        <p class="text-center text-muted my-3">Aucune tâche</p>
                    {% else %}
                        {% for task in todoTasks %}
                            <div class="card mb-2 kanban-card 
                                {{ task.priorite == 'HAUTE' ? 'priority-high' : (task.priorite == 'MOYENNE' ? 'priority-medium' : 'priority-low') }} 
                                status-todo
                                {{ task.isOverdue ? 'task-overdue' : '' }}">
                                <div class="card-body p-2">
                                    <h6 class="card-title mb-1">{{ task.titre }}</h6>
                                    <p class="card-text small mb-1">
                                        {% if task.assignedTo %}
                                            <span class="text-muted">
                                                <i class="fas fa-user"></i> {{ task.assignedTo.fullName }}
                                            </span>
                                        {% endif %}
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge {{ task.priorite == 'HAUTE' ? 'bg-danger' : (task.priorite == 'MOYENNE' ? 'bg-warning' : 'bg-info') }}">
                                            {{ task.priorite }}
                                        </span>
                                        {% if task.dateDeFin %}
                                            <small class="text-muted">
                                                <i class="fas fa-calendar-alt"></i> {{ task.dateDeFin|date('d/m/Y') }}
                                            </small>
                                        {% endif %}
                                    </div>
                                    <div class="mt-2">
                                        <a href="{{ path('app_task_show', {'id': task.id}) }}" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="{{ path('app_task_edit', {'id': task.id}) }}" class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card content-card h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">En cours</h5>
                </div>
                <div class="card-body">
                    {% set inProgressTasks = project.tasks|filter(task => task.statut == 'EN-COURS') %}
                    {% if inProgressTasks is empty %}
                        <p class="text-center text-muted my-3">Aucune tâche</p>
                    {% else %}
                        {% for task in inProgressTasks %}
                            <div class="card mb-2 kanban-card 
                                {{ task.priorite == 'HAUTE' ? 'priority-high' : (task.priorite == 'MOYENNE' ? 'priority-medium' : 'priority-low') }} 
                                status-inprogress
                                {{ task.isOverdue ? 'task-overdue' : '' }}">
                                <div class="card-body p-2">
                                    <h6 class="card-title mb-1">{{ task.titre }}</h6>
                                    <p class="card-text small mb-1">
                                        {% if task.assignedTo %}
                                            <span class="text-muted">
                                                <i class="fas fa-user"></i> {{ task.assignedTo.fullName }}
                                            </span>
                                        {% endif %}
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge {{ task.priorite == 'HAUTE' ? 'bg-danger' : (task.priorite == 'MOYENNE' ? 'bg-warning' : 'bg-info') }}">
                                            {{ task.priorite }}
                                        </span>
                                        {% if task.dateDeFin %}
                                            <small class="text-muted">
                                                <i class="fas fa-calendar-alt"></i> {{ task.dateDeFin|date('d/m/Y') }}
                                            </small>
                                        {% endif %}
                                    </div>
                                    <div class="mt-2">
                                        <a href="{{ path('app_task_show', {'id': task.id}) }}" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="{{ path('app_task_edit', {'id': task.id}) }}" class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card content-card h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Terminé</h5>
                </div>
                <div class="card-body">
                    {% set doneTasks = project.tasks|filter(task => task.statut == 'TERMINE') %}
                    {% if doneTasks is empty %}
                        <p class="text-center text-muted my-3">Aucune tâche</p>
                    {% else %}
                        {% for task in doneTasks %}
                            <div class="card mb-2 kanban-card 
                                {{ task.priorite == 'HAUTE' ? 'priority-high' : (task.priorite == 'MOYENNE' ? 'priority-medium' : 'priority-low') }} 
                                status-done">
                                <div class="card-body p-2">
                                    <h6 class="card-title mb-1">{{ task.titre }}</h6>
                                    <p class="card-text small mb-1">
                                        {% if task.assignedTo %}
                                            <span class="text-muted">
                                                <i class="fas fa-user"></i> {{ task.assignedTo.fullName }}
                                            </span>
                                        {% endif %}
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge {{ task.priorite == 'HAUTE' ? 'bg-danger' : (task.priorite == 'MOYENNE' ? 'bg-warning' : 'bg-info') }}">
                                            {{ task.priorite }}
                                        </span>
                                        {% if task.dateDeFin %}
                                            <small class="text-muted">
                                                <i class="fas fa-calendar-alt"></i> {{ task.dateDeFin|date('d/m/Y') }}
                                            </small>
                                        {% endif %}
                                    </div>
                                    <div class="mt-2">
                                        <a href="{{ path('app_task_show', {'id': task.id}) }}" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<style>
/* Ajoutez ces styles spécifiques au kanban si nécessaire */
.kanban-card {
    cursor: pointer;
    transition: all 0.3s ease;
}
.kanban-card:hover {
    transform: translateY(-5px);
}
</style>
{% endblock %}

{% block javascripts %}
	<script>
		// Initialiser Sortable pour le drag & drop
document.addEventListener('DOMContentLoaded', function () {
const columns = document.querySelectorAll('.kanban-tasks');

columns.forEach(column => {
new Sortable(column, {
group: 'kanban',
animation: 150,
onEnd: function (evt) {
const taskId = evt.item.getAttribute('data-task-id');
const newColumnId = evt.to.getAttribute('data-column-id');
const newPosition = evt.newIndex;

// Envoyer la mise à jour au serveur
fetch (`/tasks/${taskId}/move`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(
{columnId: newColumnId, position: newPosition}
)
}).then(response => response.json()).then(data => {
if (!data.success) {
console.error('Erreur lors du déplacement de la tâche');
// Remettre l'élément à sa position originale
evt.from.insertBefore(evt.item, evt.from.children[evt.oldIndex]);
}
});
}
});
});

// Gestion du changement de statut des tâches
document.querySelectorAll('.task-status-select').forEach(select => {
select.addEventListener('change', function () {
const taskId = this.getAttribute('data-task-id');
const newStatus = this.value;

fetch (`/tasks/${taskId}/update-status`, {
method: 'POST',
headers: {
'Content-Type': 'application/x-www-form-urlencoded'
},
body: `status=${newStatus}`
}).then(response => response.json()).then(data => {
if (data.success) { // Mettre à jour la classe CSS de la carte
const card = this.closest('.kanban-card');
card.className = card.className.replace(/status-\w+/g, '');

if (newStatus === 'EN-ATTENTE') 
card.classList.add('status-pending');
 else if (newStatus === 'EN-COURS') 
card.classList.add('status-progress');
 else if (newStatus === 'TERMINE') 
card.classList.add('status-completed');


} else {
alert('Erreur lors de la mise à jour du statut');
}
});
});
});
});{% if is_granted('edit', project) %}function addColumn() {
const form = document.getElementById('addColumnForm');
const formData = new FormData(form);

fetch(`/task-lists/new/{{ project.id }}`, {
method: 'POST',
body: formData
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur lors de la création de la colonne');
}
});
}
{% endif %}
	</script>
{% endblock %}
